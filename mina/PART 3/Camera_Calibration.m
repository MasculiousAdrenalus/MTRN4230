% Auto-generated by cameraCalibrator app on 28-Jul-2019
%-------------------------------------------------------
startup_rvc;
%% Camera calibration
% % Auto-generated by cameraCalibrator app on 28-Jul-2019
% %-------------------------------------------------------

% Define images to process
imageFileNames = {
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_33_45.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_33_56.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_34_02.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_34_10.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_34_27.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_34_37.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_34_52.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_34_54.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_34_59.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_02.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_06.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_09.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_15.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_18.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_24.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_29.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_34.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_37.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_41.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_45.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_49.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_52.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_35_58.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_36_05.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_36_11.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_36_15.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_36_22.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_36_25.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_36_33.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_36_39.jpg',...
    'C:\Users\Bryce\Documents\UNSW\Gits\MTRN4230\mina\PART 3\Newone\table__07_29_14_37_03.jpg',...
    };
% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
squareSize = 25;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', true, 'EstimateTangentialDistortion', true, ...
    'NumRadialDistortionCoefficients', 3, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')




% For example, you can use the calibration data to remove effects of lens distortion.
[im,newOrigin] = undistortImage(originalImage, cameraParams,'OutputView','full');

%% Camera and table plot
L(1) = Link([0 0.290 0 pi/2]);  
L(1).offset = pi/2;   % Offsets are needed so the home position matches what is defined on the robot
L(2) = Link([0 0 0.270 0]); 
L(2).offset = pi/2;
L(3) = Link([0 0 0.07 -pi/2]); 
L(3).offset = 0;
L(4) = Link([0 0.302 0 pi/2]); 
L(4).offset = 0;
L(5) = Link([pi 0 0 pi/2]); 
L(5).offset = pi;
L(6) = Link([0 0.137 0 0]); 
L(6).offset = 0;

irb_120 = SerialLink(L, 'name', 'irb120');
qi = [0, 0, 0, 0, 0, 0];

T = irb_120.fkine(qi)
irb_120.plot(qi); % Try using clear all at the top if the 0 pose does not respect the joint offsets.
pause(1);

q1 = [0, 6.5, 68.8, 0, 14.7, 0]/180*pi;
q2 = [-71.4, 70.3, -39.0, 0, 58.7,-71.4]/180*pi;
q3 = [71.4, 70.3, -39.0, 0, 58.7, 71.4]/180*pi;
T1 = irb_120.fkine(q1);
T2 = irb_120.fkine(q2);
T3 = irb_120.fkine(q3);


irb_120.plot(q1);
table = [0.129,-0.75,0.130; 0.129,0.75,0.130; 0.879,0.75,0.130; 0.879,-0.75,0.130]';
plot_poly(table, 'fillcolor', 'w', 'alpha', 1);
hold on;
% Plot reachability of robot
reach = 0.580;
anglim1 = atan(-0.520/0.175);
anglim2 = atan(0.520/0.175);
angles = linspace(anglim1, anglim2,500);
z = zeros(1,500) + 0.148;

plot3(reach*cos(angles), reach*sin(angles), z, 'r', 'LineWidth', 2);
hold off;
pause()
irb_120.plot(q2);
table = [0.129,-0.75,0.147; 0.129,0.75,0.147; 0.879,0.75,0.147; 0.879,-0.75,0.147]';
plot_poly(table, 'fillcolor', 'w', 'alpha', 1);
pause()
irb_120.plot(q3);
table = [0.129,-0.75,0.147; 0.129,0.75,0.147; 0.879,0.75,0.147; 0.879,-0.75,0.147]';
plot_poly(table, 'fillcolor', 'w', 'alpha', 1);
pause()


irb_120.plot([0 0 0 0 0 0]);
hold on;
table = [0.129,-0.75,0.147; 0.129,0.75,0.147; 0.879,0.75,0.147; 0.879,-0.75,0.147]';
plot_poly(table, 'fillcolor', 'w', 'alpha', 1);
%plot_circle([0,0,0.147], 0.5486, 'g');

% Plot reachability of robot
reach = 0.580;
anglim1 = atan(-0.520/0.175);
anglim2 = atan(0.520/0.175);
angles = linspace(anglim1, anglim2,500);
z = zeros(1,500) + 0.148;
hold on;
plot3(reach*cos(angles), reach*sin(angles), z, 'r', 'LineWidth', 2);
hold off;
hold on;


% [im,newOrigin] = undistortImage(originalImage,cameraParams,'OutputView','full');
% imagePoints = [imagePoints(:,1) + newOrigin(1), ...
%              imagePoints(:,2) + newOrigin(2)];
% [rotationMatrix, translationVector] = extrinsics(...
% imagePoints,worldPoints,cameraParams);
% % rotationMatrix = [0.076613,0.954313,0.1852; -0.96559,0.053238,0.125163;0.114613,-0.19646,0.973763];
% % translationVector = [92.64102,-561.888,5609.976];
% [orientation, location] = extrinsicsToCameraPose(rotationMatrix, ...
%   translationVector);
 r180y = [-1,0,0;0,1,0;0,0 -1];
orientation1 = [0.00569137834786537,0.999578234046340,0.0284773986400201;-0.999914510722171,0.00602392199991614,-0.0116053268364209;-0.0117719777328482,-0.0284089138218992,0.999527065244217];
orientationroate = orientation1*r180y;
location1 = [-360, -125.65 ,-860 ];
plotCamera('Location',-location1./1000,'Orientation',orientationroate,'Size',0.05);
hold off;